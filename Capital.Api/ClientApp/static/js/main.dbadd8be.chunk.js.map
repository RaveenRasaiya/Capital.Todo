{"version":3,"sources":["common/toDoReducer.js","services/todoService.js","common/toDoStatus.js","components/ToDoListItem.js","components/ToDoList.js","components/ToDoModal.js","App.js","serviceWorker.js","common/store.js","index.js"],"names":["initialState","items","ActionTypes","ActionCreators","payload","type","axiosInstance","axios","baseURL","GetAllToDos","dispatch","a","get","data","console","log","DeleteToDo","todo","delete","id","NewToDo","post","ModifyToDo","put","ToDoStatus","ToDoListItem","useDispatch","className","statusId","InputGroup","Prepend","Checkbox","aria-label","style","textAlign","title","color","onClick","marginLeft","ToDoList","toDoItems","useSelector","state","toDosReducer","useEffect","length","Table","striped","bordered","hover","map","todoItem","NewToDoModal","useState","show","setShow","Button","handleFormSubmit","handleClose","ToDoModal","modalToDo","setModalToDo","Modal","onHide","Header","closeButton","Title","Form","onSubmit","event","preventDefault","Body","Group","controlId","Label","Control","value","onChange","target","as","Footer","variant","App","maxWidth","margin","marginBottom","Boolean","window","location","hostname","match","store","configureStore","reducer","action","filter","toDos","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yQAAMA,EAAe,CACnBC,MAAO,IAGIC,EACG,eADHA,EAEE,cAFFA,EAGD,WAHCA,EAIA,YAGAC,EACC,SAACC,GAAD,MAAc,CAAEC,KAAMH,EAA0BE,YADjDD,EAEC,SAACC,GAAD,MAAc,CAAEC,KAAMH,EAAyBE,YAFhDD,EAGF,SAACC,GAAD,MAAc,CAAEC,KAAMH,EAAsBE,YAH1CD,EAID,SAACC,GAAD,MAAc,CAAEC,KAAMH,EAAuBE,Y,ICZnDE,E,MAAgBC,OAAa,CACjCC,QAAS,wCAGEC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAEAL,EAAcM,MAFd,gBAEfC,EAFe,EAEfA,KAERH,EAASP,EAA0BU,IAJZ,gDAMvBC,QAAQC,IAAR,MANuB,yDAAH,sDAUXC,EAAU,uCAAG,WAAON,EAAUO,GAAjB,SAAAN,EAAA,+EAEhBL,EAAcY,OAAd,WAAyBD,EAAKE,KAFd,OAGtBT,EAASP,EAA0Bc,IAHb,+CAKtBH,QAAQC,IAAI,UALU,wDAAH,wDASVK,EAAO,uCAAG,WAAOV,EAAUO,GAAjB,iBAAAN,EAAA,+EAGIL,EAAce,KAAK,GAAIJ,GAH3B,gBAGXJ,EAHW,EAGXA,KACRH,EAASP,EAAuBU,IAJb,gDAMnBC,QAAQC,IAAI,UANO,yDAAH,wDAUPO,EAAU,uCAAG,WAAOZ,EAAUO,GAAjB,SAAAN,EAAA,+EAGhBL,EAAciB,IAAI,GAAIN,GAHN,OAItBP,EAASP,EAAwBc,IAJX,+CAMtBH,QAAQC,IAAI,UANU,wDAAH,wD,wCCpCVS,EAGA,E,OCIAC,EAAe,SAAC,GAAY,IAAXR,EAAU,EAAVA,KACtBP,EAAWgB,cAEjB,OACE,qBAAIC,UAAS,UAAKV,EAAKW,WAAaJ,EAAuB,gBAAkB,IAA7E,UACE,oBAAIG,UAAU,MAAd,SACE,cAACE,EAAA,EAAD,UACE,cAACA,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,SAAZ,CAAqBC,aAAW,4CAItC,qBAAIC,MAAO,CAAEC,UAAW,QAAxB,UACGjB,EAAKkB,MADR,IACgBlB,EAAKE,MAErB,qBAAIQ,UAAU,MAAd,UACE,cAAC,IAAD,CAAOS,MAAM,MAAMD,MAAM,gBAAgBE,QAAS,kBAAMrB,EAAWN,EAAUO,MAC5EA,EAAKW,WAAaJ,EACjB,cAAC,IAAD,CAAWY,MAAM,OAAOD,MAAM,oBAAoBF,MAAO,CAAEK,WAAY,UAEvE,cAAC,IAAD,CACEF,MAAM,MACND,MAAM,oBACNE,QAAS,kBAAMf,EAAWZ,EAAD,YAAC,eAAeO,GAAhB,IAAsBW,SAAUJ,MACzDS,MAAO,CAAEK,WAAY,iBCxBpBC,EAAW,WACtB,IAAMC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa1C,SACtDS,EAAWgB,cAMjB,OAJAkB,qBAAU,WACRnC,EAAYC,KACX,IAEc,MAAb8B,GAAqBA,EAAUK,OAAS,EAExC,cAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,SACE,gCACGT,EAAUU,KAAI,SAACC,GACd,OAAO,cAAC,EAAD,CAAgClC,KAAMkC,GAAnBA,EAAShC,WAMtC,sD,gCCrBIiC,EAAe,WAAO,IAAD,EACRC,oBAAS,GADD,mBACzBC,EADyB,KACnBC,EADmB,KAKhC,OACE,gCACE,cAACC,EAAA,EAAD,CAAQnB,QAJO,kBAAMkB,GAAQ,IAIA5B,UAAU,kBAAvC,uBAGA,cAAC,EAAD,CAAWV,KAAM,KAAMwC,iBAAkBrC,EAASkC,KAAMA,EAAMI,YAR9C,kBAAMH,GAAQ,UA4B9BI,EAAY,SAAC,GAAmD,IAAjD1C,EAAgD,EAAhDA,KAAMwC,EAA0C,EAA1CA,iBAAkBH,EAAwB,EAAxBA,KAAMI,EAAkB,EAAlBA,YAAkB,EACjCL,mBAAS,CAAEzB,SAAU,IADY,mBAC5DgC,EAD4D,KACjDC,EADiD,KAE7DnD,EAAWgB,cAMjB,OAJAkB,qBAAU,WACRiB,EAAa5C,KACZ,CAACA,IAGF,eAAC6C,EAAA,EAAD,CAAOR,KAAMA,EAAMS,OAAQL,EAA3B,UACE,cAACI,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMI,MAAP,sBAEF,eAACC,EAAA,EAAD,CACEC,SAAU,SAACC,GACTA,EAAMC,iBACNb,EAAiB/C,EAAUkD,IAH/B,UAME,eAACE,EAAA,EAAMS,KAAP,WACE,eAACJ,EAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,EAAA,EAAKO,MAAN,oBACA,cAACP,EAAA,EAAKQ,QAAN,CACEC,MAAqB,OAAdhB,EAAqB,GAAKA,EAAUzB,MAC3C0C,SAAU,SAACR,GAAD,OAAWR,EAAa,2BAAKD,GAAN,IAAiBzB,MAAOkC,EAAMS,OAAOF,eAG1E,eAACT,EAAA,EAAKK,MAAN,CAAYC,UAAU,SAAtB,UACE,cAACN,EAAA,EAAKO,MAAN,qBACA,eAACP,EAAA,EAAKQ,QAAN,CACEE,SAAU,SAACR,GAAD,OAAWR,EAAa,2BAAKD,GAAN,IAAiBhC,SAAUyC,EAAMS,OAAOF,UACzEG,GAAG,SACHH,MAAqB,OAAdhB,EAAqB,IAAMA,EAAUhC,SAH9C,UAKE,wBAAQgD,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,yBACA,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,gCAIN,eAACd,EAAA,EAAMkB,OAAP,WACE,cAACxB,EAAA,EAAD,CAAQyB,QAAQ,YAAY5C,QAASqB,EAArC,mBAGA,cAACF,EAAA,EAAD,CAAQnD,KAAK,SAAS4E,QAAQ,UAAU5C,QAASqB,EAAjD,oCC5DKwB,MAhBf,WACE,OACE,sBAAKvD,UAAU,MAAf,UACE,4CAEA,sBAAKM,MAAO,CAAEkD,SAAU,MAAOC,OAAQ,QAAvC,UACE,qBAAKnD,MAAO,CAAEC,UAAW,QAASmD,aAAc,QAAhD,SACE,cAAC,EAAD,MAGF,cAAC,EAAD,WCHYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBCfOC,EAAQC,YAAe,CAClCC,QAAS,CACPlD,aRaW,WAAoD,IAA/BD,EAA8B,uDAAtB1C,EAAc8F,EAAQ,uCAChE,OAAQA,EAAOzF,MACb,KAAKH,EACH,OAAO,2BAAKwC,GAAZ,IAAmBzC,MAAM,YAAK6F,EAAO1F,WACvC,KAAKF,EACH,OAAO,2BACFwC,GADL,IAEEzC,MAAM,YAAKyC,EAAMzC,MAAM8F,QAAO,SAAC9E,GAAD,OAAUA,EAAKE,KAAO2E,EAAO1F,QAAQe,SAEvE,KAAKjB,EACH,OAAO,2BAAKwC,GAAZ,IAAmBzC,MAAM,GAAD,mBAAMyC,EAAMzC,OAAZ,CAAmB6F,EAAO1F,YACpD,KAAKF,EACH,IAAI8F,EAAQtD,EAAMzC,MAAMiD,KAAI,SAACjC,GAI3B,OAHIA,EAAKE,KAAO2E,EAAO1F,QAAQe,KAC7BF,EAAO6E,EAAO1F,SAETa,KAET,OAAO,2BAAKyB,GAAZ,IAAmBzC,MAAM,YAAK+F,KAChC,QACE,OAAOtD,OS5BbuD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,SFmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.dbadd8be.chunk.js","sourcesContent":["const initialState = {\r\n  items: [],\r\n};\r\n\r\nexport const ActionTypes = {\r\n  SET_ALL_TODO: \"SET_ALL_TODO\",\r\n  DELETE_TODO: \"DELETE_TODO\",\r\n  NEW_TODO: \"NEW_TODO\",\r\n  EDIT_TODO: \"EDIT_TODO\",\r\n};\r\n\r\nexport const ActionCreators = {\r\n  getAllToDo: (payload) => ({ type: ActionTypes.SET_ALL_TODO, payload }),\r\n  deleteToDo: (payload) => ({ type: ActionTypes.DELETE_TODO, payload }),\r\n  newToDo: (payload) => ({ type: ActionTypes.NEW_TODO, payload }),\r\n  editToDo: (payload) => ({ type: ActionTypes.EDIT_TODO, payload }),\r\n};\r\n\r\nexport default function ToDoReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_ALL_TODO:      \r\n      return { ...state, items: [...action.payload] };\r\n    case ActionTypes.DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        items: [...state.items.filter((todo) => todo.id !== action.payload.id)],\r\n      };\r\n    case ActionTypes.NEW_TODO:\r\n      return { ...state, items: [...state.items, action.payload] };\r\n    case ActionTypes.EDIT_TODO:\r\n      let toDos = state.items.map((todo) => {\r\n        if (todo.id === action.payload.id) {\r\n          todo = action.payload;\r\n        }\r\n        return todo;\r\n      });\r\n      return { ...state, items: [...toDos] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ActionCreators } from \"../common/toDoReducer\";\r\nimport * as axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"https://localhost:44311/api/v1/todo\",\r\n});\r\n\r\nexport const GetAllToDos = async (dispatch) => {\r\n  try {\r\n    const { data } = await axiosInstance.get();\r\n\r\n    dispatch(ActionCreators.getAllToDo(data));\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n};\r\n\r\nexport const DeleteToDo = async (dispatch, todo) => {\r\n  try {   \r\n    await axiosInstance.delete(`/${todo.id}`);\r\n    dispatch(ActionCreators.deleteToDo(todo));\r\n  } catch {\r\n    console.log(\"Error!\");\r\n  }\r\n};\r\n\r\nexport const NewToDo = async (dispatch, todo) => {\r\n  try {\r\n    // api call\r\n    const { data } = await axiosInstance.post(\"\", todo);\r\n    dispatch(ActionCreators.newToDo(data));\r\n  } catch {\r\n    console.log(\"Error!\");\r\n  }\r\n};\r\n\r\nexport const ModifyToDo = async (dispatch, todo) => {\r\n  try {\r\n    // api call\r\n    await axiosInstance.put(\"\", todo);\r\n    dispatch(ActionCreators.editToDo(todo));\r\n  } catch {\r\n    console.log(\"Error!\");\r\n  }\r\n};\r\n","export const ToDoStatus = {\r\n  New: 1,\r\n  InPorgress: 2,\r\n  Completed: 3,\r\n  Cancelled: 4,\r\n};\r\n","import React from \"react\";\r\nimport { InputGroup } from \"react-bootstrap\";\r\nimport { Check2, Trash, Check2All } from \"react-bootstrap-icons\";\r\nimport { DeleteToDo, ModifyToDo } from \"../services/todoService\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ToDoStatus } from \"../common/toDoStatus\";\r\n\r\nexport const ToDoListItem = ({todo}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <tr className={`${todo.statusId === ToDoStatus.Completed ? \"row-completed\" : \"\"}`}>\r\n      <td className=\"w-5\">\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" />\r\n          </InputGroup.Prepend>\r\n        </InputGroup>\r\n      </td>\r\n      <td style={{ textAlign: \"left\" }}>\r\n        {todo.title}-{todo.id}\r\n      </td>\r\n      <td className=\"w-5\">\r\n        <Trash color=\"red\" title=\"Delete a task\" onClick={() => DeleteToDo(dispatch, todo)} />\r\n        {todo.statusId === ToDoStatus.Completed ? (\r\n          <Check2All color=\"blue\" title=\"Task is completed\" style={{ marginLeft: \"15px\" }} />\r\n        ) : (\r\n          <Check2\r\n            color=\"red\"\r\n            title=\"Mark as completed\"\r\n            onClick={() => ModifyToDo(dispatch, { ...todo, statusId: ToDoStatus.Completed })}\r\n            style={{ marginLeft: \"15px\" }}\r\n          />\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { GetAllToDos } from \"../services/todoService\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { ToDoListItem } from \"./ToDoListItem\";\r\n\r\nexport const ToDoList = () => {\r\n  const toDoItems = useSelector((state) => state.toDosReducer.items);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    GetAllToDos(dispatch);\r\n  }, []);\r\n\r\n  if (toDoItems != null && toDoItems.length > 0) {\r\n    return (\r\n      <Table striped bordered hover>\r\n        <tbody>\r\n          {toDoItems.map((todoItem) => {\r\n            return <ToDoListItem key={todoItem.id} todo={todoItem} />;\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n  return <h5>To do list is empty</h5>;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Form, Modal, Button } from \"react-bootstrap\";\r\nimport { NewToDo, ModifyToDo } from \"../services/todoService\";\r\n\r\nexport const NewToDoModal = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleShow} className=\"btn btn-success\">\r\n        New To Do\r\n      </Button>\r\n      <ToDoModal todo={null} handleFormSubmit={NewToDo} show={show} handleClose={handleClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const EditToDoModal = ({ todo }) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleShow} className=\"btn btn-warning\">\r\n        Edit To Do\r\n      </Button>\r\n      <ToDoModal todo={todo} handleFormSubmit={ModifyToDo} show={show} handleClose={handleClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ToDoModal = ({ todo, handleFormSubmit, show, handleClose }) => {\r\n  const [modalToDo, setModalToDo] = useState({ statusId: 1 });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setModalToDo(todo);\r\n  }, [todo]);\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>To Do</Modal.Title>\r\n      </Modal.Header>\r\n      <Form\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          handleFormSubmit(dispatch, modalToDo);\r\n        }}\r\n      >\r\n        <Modal.Body>\r\n          <Form.Group controlId=\"title\">\r\n            <Form.Label>Title</Form.Label>\r\n            <Form.Control\r\n              value={modalToDo === null ? \"\" : modalToDo.title}\r\n              onChange={(event) => setModalToDo({ ...modalToDo, title: event.target.value })}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"status\">\r\n            <Form.Label>Status</Form.Label>\r\n            <Form.Control\r\n              onChange={(event) => setModalToDo({ ...modalToDo, statusId: event.target.value })}\r\n              as=\"select\"\r\n              value={modalToDo === null ? \"0\" : modalToDo.statusId}\r\n            >\r\n              <option value=\"0\">Select</option>\r\n              <option value=\"1\">New</option>\r\n              <option value=\"2\">In Porgress</option>\r\n              <option value=\"3\">Completed</option>\r\n              <option value=\"4\">Cancelled</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { ToDoList } from \"./components/ToDoList\";\nimport { NewToDoModal } from \"./components/ToDoModal\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h3>To Do List</h3>\n\n      <div style={{ maxWidth: \"90%\", margin: \"auto\" }}>\n        <div style={{ textAlign: \"right\", marginBottom: \"10px\" }}>\n          <NewToDoModal />\n        </div>\n\n        <ToDoList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport ToDoReducer from './toDoReducer';\n\nexport const store = configureStore({\n  reducer: {\n    toDosReducer: ToDoReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { store } from './common/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}